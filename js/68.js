(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[68],{

/***/ "./src/common/netWork/crisps_api.js":
/*!******************************************!*\
  !*** ./src/common/netWork/crisps_api.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.postCrispsBoilingHome = postCrispsBoilingHome;\nexports.postCrispsCollect = postCrispsCollect;\nexports.postCrispsComment = postCrispsComment;\nexports.postCrispsDelete = postCrispsDelete;\nexports.postCrispsDeleteComment = postCrispsDeleteComment;\nexports.postCrispsDropdownTagPage = postCrispsDropdownTagPage;\nexports.postCrispsFollowTag = postCrispsFollowTag;\nexports.postCrispsGetTagPage = postCrispsGetTagPage;\nexports.postCrispsGmapToCrisps = postCrispsGmapToCrisps;\nexports.postCrispsHomeData = postCrispsHomeData;\nexports.postCrispsListCsheets = postCrispsListCsheets;\nexports.postCrispsListHotSearch = postCrispsListHotSearch;\nexports.postCrispsListTags = postCrispsListTags;\nexports.postCrispsModifyDropdownTags = postCrispsModifyDropdownTags;\nexports.postCrispsNewTag = postCrispsNewTag;\nexports.postCrispsNotInterested = postCrispsNotInterested;\nexports.postCrispsPullFeed = postCrispsPullFeed;\nexports.postCrispsQueryComments = postCrispsQueryComments;\nexports.postCrispsQueryFeed = postCrispsQueryFeed;\nexports.postCrispsReportComment = postCrispsReportComment;\nexports.postCrispsReportCrisps = postCrispsReportCrisps;\nexports.postCrispsSearch = postCrispsSearch;\nexports.postCrispsSearchCsheet = postCrispsSearchCsheet;\nexports.postCrispsSearchTag = postCrispsSearchTag;\nexports.postCrispsShare = postCrispsShare;\nexports.postCrispsUncollect = postCrispsUncollect;\nexports.postCrispsUnfollowTag = postCrispsUnfollowTag;\nexports.postCrispsUnvoteComment = postCrispsUnvoteComment;\nexports.postCrispsUnvoteCrisps = postCrispsUnvoteCrisps;\nexports.postCrispsUse = postCrispsUse;\nexports.postCrispsView = postCrispsView;\nexports.postCrispsVoteComment = postCrispsVoteComment;\nexports.postCrispsVoteCrisps = postCrispsVoteCrisps;\nvar _base = __webpack_require__(/*! ./base */ \"./src/common/netWork/base.js\");\n//获取可选风暴标签\nfunction postCrispsListTags(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/list-tags', req, onOk, onFail, eventually, headers);\n}\n//搜索标签\nfunction postCrispsSearchTag(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/search-tag', req, onOk, onFail, eventually, headers);\n}\n//新建标签\nfunction postCrispsNewTag(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/new-tag', req, onOk, onFail, eventually, headers);\n}\n//分享我的导图到风暴\nfunction postCrispsShare(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/share', req, onOk, onFail, eventually, headers);\n}\n//分享群组文件到风暴\nfunction postCrispsGmapToCrisps(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/gmap-to-crisps', req, onOk, onFail, eventually, headers);\n}\n//删除风暴\nfunction postCrispsDelete(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/delete', req, onOk, onFail, eventually, headers);\n}\n//收藏风暴\nfunction postCrispsCollect(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/collect', req, onOk, onFail, eventually, headers);\n}\n//取消收藏风暴\nfunction postCrispsUncollect(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/uncollect', req, onOk, onFail, eventually, headers);\n}\n//关注标签\nfunction postCrispsFollowTag(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/follow-tag', req, onOk, onFail, eventually, headers);\n}\n//取消关注\nfunction postCrispsUnfollowTag(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/unfollow-tag', req, onOk, onFail, eventually, headers);\n}\n//发起评论\nfunction postCrispsComment(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/comment', req, onOk, onFail, eventually, headers);\n}\n//点赞评论\nfunction postCrispsVoteComment(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/vote-comment', req, onOk, onFail, eventually, headers);\n}\n//取消点赞评论\nfunction postCrispsUnvoteComment(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/unvote-comment', req, onOk, onFail, eventually, headers);\n}\n//删除评论\nfunction postCrispsDeleteComment(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/delete-comment', req, onOk, onFail, eventually, headers);\n}\n//举报评论\nfunction postCrispsReportComment(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/report-comment', req, onOk, onFail, eventually, headers);\n}\n//点赞风暴\nfunction postCrispsVoteCrisps(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/vote-crisps', req, onOk, onFail, eventually, headers);\n}\n//取消点赞风暴\nfunction postCrispsUnvoteCrisps(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/unvote-crisps', req, onOk, onFail, eventually, headers);\n}\n//举报风暴\nfunction postCrispsReportCrisps(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/report-crisps', req, onOk, onFail, eventually, headers);\n}\n//不感兴趣\nfunction postCrispsNotInterested(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/not-interested', req, onOk, onFail, eventually, headers);\n}\n//修改推荐页顶部下拉-标签管理面板数据\nfunction postCrispsModifyDropdownTags(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/modify-dropdown-tags', req, onOk, onFail, eventually, headers);\n}\n//首页数据\nfunction postCrispsHomeData(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/home-data', req, onOk, onFail, eventually, headers);\n}\n//拉取最新推荐列表-旧\nfunction postCrispsPullFeed(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/pull-feed', req, onOk, onFail, eventually, headers);\n}\n//拉取底部推荐列表-旧\nfunction postCrispsQueryFeed(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/query-feed', req, onOk, onFail, eventually, headers);\n}\n//推荐页顶部下拉标签管理面板-旧\nfunction postCrispsDropdownTagPage(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/dropdown-tag-page', req, onOk, onFail, eventually, headers);\n}\n//查看风暴\nfunction postCrispsView(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/view', req, onOk, onFail, eventually, headers);\n}\n//使用风暴\nfunction postCrispsUse(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/use', req, onOk, onFail, eventually, headers);\n}\n//查看风暴下的全部评论\nfunction postCrispsQueryComments(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/query-comments', req, onOk, onFail, eventually, headers);\n}\n//拉取沸点首页数据\nfunction postCrispsBoilingHome(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/boiling-home', req, onOk, onFail, eventually, headers);\n}\n//获取搜索热词列表\nfunction postCrispsListHotSearch(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/list-hot-search', req, onOk, onFail, eventually, headers);\n}\n//搜索风暴\nfunction postCrispsSearch(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/search', req, onOk, onFail, eventually, headers);\n}\n//标签主页数据\nfunction postCrispsGetTagPage(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/get-tag-page', req, onOk, onFail, eventually, headers);\n}\n//拉取风暴的分页列表\nfunction postCrispsListCsheets(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/list-csheets', req, onOk, onFail, eventually, headers);\n}\n//搜索风暴分页\nfunction postCrispsSearchCsheet(req, onOk, onFail, eventually, headers) {\n  (0, _base.apiRequest)('POST', '/crisps/search-csheet', req, onOk, onFail, eventually, headers);\n}\n\n//# sourceURL=webpack:///./src/common/netWork/crisps_api.js?");

/***/ }),

/***/ "./src/utils/httpImageToPrefix.js":
/*!****************************************!*\
  !*** ./src/utils/httpImageToPrefix.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = httpImageToPrefix;\nvar _HttpServerConfig = _interopRequireDefault(__webpack_require__(/*! ../common/HttpServerConfig */ \"./src/common/HttpServerConfig.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n//拼接地址前缀\nfunction httpImageToPrefix(imageData) {\n  return _HttpServerConfig.default.getMediaSrc(imageData);\n}\n\n//# sourceURL=webpack:///./src/utils/httpImageToPrefix.js?");

/***/ }),

/***/ "./src/utils/timestampToTime.js":
/*!**************************************!*\
  !*** ./src/utils/timestampToTime.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _semver = __webpack_require__(/*! semver */ \"./node_modules/semver/semver.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : String(i); }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n//转化时间类\nvar dataTimeToFormat = /*#__PURE__*/function () {\n  function dataTimeToFormat() {\n    _classCallCheck(this, dataTimeToFormat);\n  }\n  _createClass(dataTimeToFormat, [{\n    key: \"timestampToTime\",\n    value: function timestampToTime(timestamp) {\n      var date = new Date(timestamp * 1000); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\n      var Y = date.getFullYear() + '-';\n      var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n      var D = date.getDate() + 1 < 10 ? '0' + date.getDate() : date.getDate();\n      var h = date.getHours() + ':';\n      var m = date.getMinutes() + ':';\n      var s = date.getSeconds();\n      return Y + M + D; //+ h  + m + s\n    }\n  }, {\n    key: \"timestampToTimeSeparator\",\n    value: function timestampToTimeSeparator(timestamp) {\n      var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';\n      var date = new Date(timestamp * 1000); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\n      var Y = date.getFullYear() + separator;\n      var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + separator;\n      var D = date.getDate() + 1 < 10 ? '0' + date.getDate() : date.getDate();\n      var h = date.getHours() + ':';\n      var m = date.getMinutes() + ':';\n      var s = date.getSeconds();\n      return Y + M + D; //+ h  + m + s\n    }\n  }, {\n    key: \"timestampToTimeDHM\",\n    value: function timestampToTimeDHM(timestamp) {\n      var date = new Date(timestamp * 1000); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\n      var Y = date.getFullYear() + \"-\";\n      var M = (date.getMonth() + 1 < 10 ? \"0\" + (date.getMonth() + 1) : date.getMonth() + 1) + \"月\";\n      var D = (date.getDate() + 1 < 10 ? \"0\" + date.getDate() : date.getDate()) + \"日 \";\n      var h = date.getHours() + \":\";\n      var m = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n      var s = date.getSeconds();\n      return M + D + h + m; //+ h  + m + s\n    }\n\n    //秒转分\n  }, {\n    key: \"sToHs\",\n    value: function sToHs(s) {\n      //计算分钟\n      //算法：将秒数除以60，然后下舍入，既得到分钟数\n      var h;\n      h = Math.floor(s / 60);\n      //计算秒\n      //算法：取得秒%60的余数，既得到秒数\n      s = s % 60;\n      //将变量转换为字符串\n      h += '';\n      s += '';\n      //如果只有一位数，前面增加一个0\n      h = h.length == 1 ? '0' + h : h;\n      s = s.length == 1 ? '0' + s : s;\n      return h + ':' + s;\n    }\n    //五分钟前 一小时前 昨天 前天 月日\n  }, {\n    key: \"formatTime\",\n    value: function formatTime(time) {\n      var dataNow = new Date();\n      var timeDiff = dataNow.getTime() - time * 1000; //相差时间毫秒数\n      var days = Math.floor(timeDiff / (24 * 3600 * 1000)); //计算天数\n      var leave1 = timeDiff % (24 * 3600 * 1000); //计算天数后剩余的时间\n      var hours = Math.floor(leave1 / (3600 * 1000)); //计算天数后剩余小时数\n      var leavel2 = timeDiff % (3600 * 1000); //计算剩余小时后剩余的秒数\n      var minutes = Math.floor(leavel2 / (60 * 1000)); // 计算剩余的分钟数\n\n      var date = new Date(time * 1000); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\n      var M = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\n      var D = date.getDate() + 1 < 10 ? '0' + date.getDate() : date.getDate();\n      if (days !== 0 && days <= 2) {\n        if (days == 1) {\n          return \"昨天\";\n        } else if (days == 2) {\n          return \"前天\";\n        }\n      } else if (days >= 3) {\n        return M + \"月\" + D + \"日\";\n      } else if (days == 0 && hours != 0) {\n        return hours + \"小时前\";\n      } else {\n        if (minutes >= 5 && minutes < 60) {\n          return minutes + \"分钟前\";\n        } else if (minutes < 5 && minutes >= 0) {\n          return \"刚刚\";\n        }\n      }\n    }\n  }]);\n  return dataTimeToFormat;\n}();\nvar dataTimeToFormats = new dataTimeToFormat();\nvar _default = exports.default = dataTimeToFormats;\n\n//# sourceURL=webpack:///./src/utils/timestampToTime.js?");

/***/ })

}]);