{"version":3,"sources":["webpack:///./src/utils/timestampToTime.js","webpack:///./src/utils/httpImageToPrefix.js","webpack:///./src/common/netWork/crisps_api.js"],"names":["require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","t","_toPrimitive","String","r","e","toPrimitive","call","Number","dataTimeToFormat","value","timestamp","date","Date","Y","getFullYear","M","getMonth","D","getDate","getHours","getMinutes","getSeconds","separator","arguments","undefined","h","m","s","Math","floor","time","dataNow","timeDiff","getTime","days","leave1","hours","leavel2","minutes","dataTimeToFormats","exports","default","_HttpServerConfig","_interopRequireDefault","obj","__esModule","httpImageToPrefix","imageData","HttpServerConfig","getMediaSrc","_base","postCrispsListTags","req","onOk","onFail","eventually","headers","apiRequest","postCrispsSearchTag","postCrispsNewTag","postCrispsShare","postCrispsGmapToCrisps","postCrispsDelete","postCrispsCollect","postCrispsUncollect","postCrispsFollowTag","postCrispsUnfollowTag","postCrispsComment","postCrispsVoteComment","postCrispsUnvoteComment","postCrispsDeleteComment","postCrispsReportComment","postCrispsVoteCrisps","postCrispsUnvoteCrisps","postCrispsReportCrisps","postCrispsNotInterested","postCrispsModifyDropdownTags","postCrispsHomeData","postCrispsPullFeed","postCrispsQueryFeed","postCrispsDropdownTagPage","postCrispsView","postCrispsUse","postCrispsQueryComments","postCrispsBoilingHome","postCrispsListHotSearch","postCrispsSearch","postCrispsGetTagPage","postCrispsListCsheets","postCrispsSearchCsheet"],"mappings":"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","file":"js/chunk-32601098.6a9d0ee7.js","sourcesContent":["import { parse } from \"semver\";\n\n//转化时间类\nclass dataTimeToFormat {\n    timestampToTime(timestamp) {\n        var date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n        var Y = date.getFullYear() + '-';\n        var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';\n        var D = (date.getDate() + 1 < 10 ? '0' + (date.getDate()) : date.getDate());\n        var h = date.getHours() + ':';\n        var m = date.getMinutes() + ':';\n        var s = date.getSeconds();\n        return Y + M + D; //+ h  + m + s\n    }\n\n    timestampToTimeSeparator(timestamp, separator = '-') {\n        var date = new Date(timestamp * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n        var Y = date.getFullYear() + separator;\n        var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + separator;\n        var D = (date.getDate() + 1 < 10 ? '0' + (date.getDate()) : date.getDate());\n        var h = date.getHours() + ':';\n        var m = date.getMinutes() + ':';\n        var s = date.getSeconds();\n        return Y + M + D; //+ h  + m + s\n    }\n\n    timestampToTimeDHM(timestamp) {\n        var date = new Date(timestamp * 1000); //时间戳为10位需*1000，时间戳为13位的话不需乘1000\n        var Y = date.getFullYear() + \"-\";\n        var M =\n            (date.getMonth() + 1 < 10\n                ? \"0\" + (date.getMonth() + 1)\n                : date.getMonth() + 1) + \"月\";\n        var D = (date.getDate() + 1 < 10 ? \"0\" + date.getDate() : date.getDate())+ \"日 \";\n        var h = date.getHours() + \":\";\n        var m = date.getMinutes() < 10 ? \"0\" + date.getMinutes() : date.getMinutes();\n        var s = date.getSeconds();\n        return M + D + h + m; //+ h  + m + s\n    }\n\n    //秒转分\n    sToHs(s) {\n        //计算分钟\n        //算法：将秒数除以60，然后下舍入，既得到分钟数\n        var h;\n        h = Math.floor(s / 60);\n        //计算秒\n        //算法：取得秒%60的余数，既得到秒数\n        s = s % 60;\n        //将变量转换为字符串\n        h += '';\n        s += '';\n        //如果只有一位数，前面增加一个0\n        h = (h.length == 1) ? '0' + h : h;\n        s = (s.length == 1) ? '0' + s : s;\n        return h + ':' + s;\n    }\n    //五分钟前 一小时前 昨天 前天 月日\n    formatTime(time) {\n        let dataNow = new Date()\n        let timeDiff = dataNow.getTime() - time * 1000   //相差时间毫秒数\n        let days = Math.floor(timeDiff / (24 * 3600 * 1000));//计算天数\n        let leave1 = timeDiff % (24 * 3600 * 1000);//计算天数后剩余的时间\n        let hours = Math.floor(leave1 / (3600 * 1000)) //计算天数后剩余小时数\n        let leavel2 = timeDiff % (3600 * 1000); //计算剩余小时后剩余的秒数\n        let minutes = Math.floor(leavel2 / (60 * 1000)); // 计算剩余的分钟数\n\n        var date = new Date(time * 1000);//时间戳为10位需*1000，时间戳为13位的话不需乘1000\n        var M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1);\n        var D = (date.getDate() + 1 < 10 ? '0' + (date.getDate()) : date.getDate());\n        if (days !== 0 && days <= 2) {\n            if (days == 1) {\n                return \"昨天\"\n            } else if (days == 2) {\n                return \"前天\"\n            } \n        }else if(days >= 3){\n            return M + \"月\" + D + \"日\"\n        } else if (days == 0 && hours != 0) {\n            return hours + \"小时前\"\n        } else {\n            if (minutes >= 5 && minutes < 60) {\n                return minutes + \"分钟前\"\n            } else if (minutes < 5 && minutes >= 0) {\n                return \"刚刚\"\n            }\n        }\n    }\n}\nconst dataTimeToFormats = new dataTimeToFormat()\nexport default dataTimeToFormats\n","import HttpServerConfig from \"../common/HttpServerConfig\"\n\n//拼接地址前缀\nexport default function httpImageToPrefix(imageData) {\n    return HttpServerConfig.getMediaSrc(imageData)\n}","import {apiRequest} from './base'\n\n//获取可选风暴标签\nexport function postCrispsListTags(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/list-tags',req,onOk,onFail,eventually,headers)\n}\n//搜索标签\nexport function postCrispsSearchTag(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/search-tag',req,onOk,onFail,eventually,headers)\n}\n//新建标签\nexport function postCrispsNewTag(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/new-tag',req,onOk,onFail,eventually,headers)\n}\n//分享我的导图到风暴\nexport function postCrispsShare(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/share',req,onOk,onFail,eventually,headers)\n}\n//分享群组文件到风暴\nexport function postCrispsGmapToCrisps(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/gmap-to-crisps',req,onOk,onFail,eventually,headers)\n}\n//删除风暴\nexport function postCrispsDelete(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/delete',req,onOk,onFail,eventually,headers)\n}\n//收藏风暴\nexport function postCrispsCollect(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/collect',req,onOk,onFail,eventually,headers)\n}\n//取消收藏风暴\nexport function postCrispsUncollect(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/uncollect',req,onOk,onFail,eventually,headers)\n}\n//关注标签\nexport function postCrispsFollowTag(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/follow-tag',req,onOk,onFail,eventually,headers)\n}\n//取消关注\nexport function postCrispsUnfollowTag(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/unfollow-tag',req,onOk,onFail,eventually,headers)\n}\n//发起评论\nexport function postCrispsComment(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/comment',req,onOk,onFail,eventually,headers)\n}\n//点赞评论\nexport function postCrispsVoteComment(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/vote-comment',req,onOk,onFail,eventually,headers)\n}\n//取消点赞评论\nexport function postCrispsUnvoteComment(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/unvote-comment',req,onOk,onFail,eventually,headers)\n}\n//删除评论\nexport function postCrispsDeleteComment(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/delete-comment',req,onOk,onFail,eventually,headers)\n}\n//举报评论\nexport function postCrispsReportComment(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/report-comment',req,onOk,onFail,eventually,headers)\n}\n//点赞风暴\nexport function postCrispsVoteCrisps(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/vote-crisps',req,onOk,onFail,eventually,headers)\n}\n//取消点赞风暴\nexport function postCrispsUnvoteCrisps(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/unvote-crisps',req,onOk,onFail,eventually,headers)\n}\n//举报风暴\nexport function postCrispsReportCrisps(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/report-crisps',req,onOk,onFail,eventually,headers)\n}\n//不感兴趣\nexport function postCrispsNotInterested(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/not-interested',req,onOk,onFail,eventually,headers)\n}\n//修改推荐页顶部下拉-标签管理面板数据\nexport function postCrispsModifyDropdownTags(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/modify-dropdown-tags',req,onOk,onFail,eventually,headers)\n}\n//首页数据\nexport function postCrispsHomeData(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/home-data',req,onOk,onFail,eventually,headers)\n}\n//拉取最新推荐列表-旧\nexport function postCrispsPullFeed(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/pull-feed',req,onOk,onFail,eventually,headers)\n}\n//拉取底部推荐列表-旧\nexport function postCrispsQueryFeed(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/query-feed',req,onOk,onFail,eventually,headers)\n}\n//推荐页顶部下拉标签管理面板-旧\nexport function postCrispsDropdownTagPage(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/dropdown-tag-page',req,onOk,onFail,eventually,headers)\n}\n//查看风暴\nexport function postCrispsView(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/view',req,onOk,onFail,eventually,headers)\n}\n//使用风暴\nexport function postCrispsUse(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/use',req,onOk,onFail,eventually,headers)\n}\n//查看风暴下的全部评论\nexport function postCrispsQueryComments(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/query-comments',req,onOk,onFail,eventually,headers)\n}\n//拉取沸点首页数据\nexport function postCrispsBoilingHome(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/boiling-home',req,onOk,onFail,eventually,headers)\n}\n//获取搜索热词列表\nexport function postCrispsListHotSearch(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/list-hot-search',req,onOk,onFail,eventually,headers)\n}\n//搜索风暴\nexport function postCrispsSearch(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/search',req,onOk,onFail,eventually,headers)\n}\n//标签主页数据\nexport function postCrispsGetTagPage(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/get-tag-page',req,onOk,onFail,eventually,headers)\n}\n//拉取风暴的分页列表\nexport function postCrispsListCsheets(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/list-csheets',req,onOk,onFail,eventually,headers)\n}\n//搜索风暴分页\nexport function postCrispsSearchCsheet(req,onOk,onFail,eventually,headers){\n    apiRequest('POST','/crisps/search-csheet',req,onOk,onFail,eventually,headers)\n}\n"],"sourceRoot":""}